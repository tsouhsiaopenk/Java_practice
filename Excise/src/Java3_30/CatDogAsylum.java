package Java3_30;

import java.util.*;

public class CatDogAsylum {
    public ArrayList<Integer> asylum(int[][] ope) {
        // write code here
        // 第一个元素：1 进入
        //           2 有人收养
        // 第二个元素：正数 狗
        //             负数 猫
        //             0    策略一：选择最早的
        //             1    狗、
        //            -1   猫
        ArrayList<Integer> in = new ArrayList<>();
        ArrayList<Integer> out = new ArrayList<>();

        for (int i = 0; i < ope.length; i++) {
            if (ope[i][0] == 1){
                // 1，让所有的动物进入in这个列表中
                //    遍历每一行，查看其第一个元素是否为1，是1就说明，需要进入列表之中.
                //    将对应的动物编号添加进列表
                in.add(ope[i][1]);
            }else if (ope[i][0] == 2){
                // 2, 如果第一个元素为2 的话，需要判断删除列表中的那个动物
                if (in.isEmpty()){
                    continue;
                }else if (ope[i][1] == 0){
                    // 按照策略一，取出第一个动物
                    out.add(in.get(0));
                    in.remove(0);
                }else if (ope[i][1] == 1){
                    // 遍历in列表，找到第一个需要被收养的狗
                    for (int j = 0; j < in.size(); j++) {
                        if (in.get(j) > 0){
                            out.add(in.get(j));
                            in.remove(j);
                            // 找到第一个需要被收养的狗，就结束当前循环
                            break;
                        }
                    }
                }else if (ope[i][1] == -1){
                    // 遍历in列表，找到第一个需要被收养的猫
                    for (int j = 0; j <in.size() ; j++) {
                        if (in.get(j) < 0){
                            out.add(in.get(j));
                            in.remove(j);
                            // 找到第一个需要被收养的猫，就接受当前循环
                            break;
                        }
                    }
                }
            }
        }
        return out;
    }

    public static void main(String[] args) {
        int ope[][]={{1,-5},{1,-1},{1,9},{1,9},{2,0},{2,1},{1,-8},{2,1},{1,-71},{1,-92},{1,18},{1,91},{1,61},{2,-1},{1,-35},{1,95},{1,-49},{1,9},{1,78},{2,0},{1,91},{1,-96},{2,-1},{2,0},{2,-1},{2,1},{1,38},{2,0},{1,45},{2,0},{1,-51},{2,1},{2,1},{2,-1},{1,39},{1,59},{1,45},{2,0},{1,-70},{2,0},{1,23},{1,88},{1,83},{1,69},{1,-78},{1,-3},{1,-9},{1,-20},{1,-74},{1,-62},{1,5},{1,55},{1,-36},{1,-21},{1,-94},{1,-27},{1,-69},{2,0},{1,-30},{1,-84},{2,0},{2,0},{2,-1},{1,92},{1,60},{2,1},{2,0},{1,-63},{2,0},{1,-87},{1,66},{2,0},{1,17},{2,0},{2,1},{1,-41},{1,-3},{1,-29},{1,72},{2,1},{1,35},{1,81},{1,-83},{1,-17},{1,36},{1,99},{1,-17},{1,8},{2,0},{1,80},{1,50},{1,80},{2,0},{1,-48},{1,-82},{1,-63},{1,2},{2,1},{1,-43},{1,59},{1,93},{1,55},{1,-93},{2,-1},{1,2},{1,13},{2,0}};
        System.out.println(Arrays.toString(ope));
    }
}